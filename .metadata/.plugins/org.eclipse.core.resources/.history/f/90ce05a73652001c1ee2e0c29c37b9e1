package guest.service;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import egovframework.rte.fdl.cmmn.EgovAbstractServiceImpl;
import egovframework.rte.fdl.idgnr.EgovIdGnrService;
import guest.service.GusetService;
import guest.vo.GusetDefaultVO;
import guest.vo.GusetVO;
import guest.dao.GusetDAO;
import guest.dao.GusetMapper;
/**
 * @Class Name : GusetServiceImpl.java
 * @Description : Guset Business Implement class
 * @Modification Information
 *
 * @author Brian
 * @since 2021-11-29
 * @version 1.0
 * @see
 *  
 *  Copyright (C)  All right reserved.
 */

@Service("gusetService")
public class GusetServiceImpl extends EgovAbstractServiceImpl implements
        GusetService {
        
    private static final Logger LOGGER = LoggerFactory.getLogger(GusetServiceImpl.class);

    @Resource(name="gusetMapper")
    private GusetMapper gusetDAO;
    
    //@Resource(name="gusetDAO")
    //private GusetDAO gusetDAO;
    
    /** ID Generation */
    //@Resource(name="{egovGusetIdGnrService}")    
    //private EgovIdGnrService egovIdGnrService;

	/**
	 * guset을 등록한다.
	 * @param vo - 등록할 정보가 담긴 GusetVO
	 * @return 등록 결과
	 * @exception Exception
	 */
    public String insertGuset(GusetVO vo) throws Exception {
    	LOGGER.debug(vo.toString());
    	
    	/** ID Generation Service */
    	//TODO 해당 테이블 속성에 따라 ID 제너레이션 서비스 사용
    	//String id = egovIdGnrService.getNextStringId();
    	//vo.setId(id);
    	LOGGER.debug(vo.toString());
    	
    	gusetDAO.insertGuset(vo);
    	//TODO 해당 테이블 정보에 맞게 수정    	
        return null;
    }

    /**
	 * guset을 수정한다.
	 * @param vo - 수정할 정보가 담긴 GusetVO
	 * @return void형
	 * @exception Exception
	 */
    public void updateGuset(GusetVO vo) throws Exception {
        gusetDAO.updateGuset(vo);
    }

    /**
	 * guset을 삭제한다.
	 * @param vo - 삭제할 정보가 담긴 GusetVO
	 * @return void형 
	 * @exception Exception
	 */
    public void deleteGuset(GusetVO vo) throws Exception {
        gusetDAO.deleteGuset(vo);
    }

    /**
	 * guset을 조회한다.
	 * @param vo - 조회할 정보가 담긴 GusetVO
	 * @return 조회한 guset
	 * @exception Exception
	 */
    public GusetVO selectGuset(GusetVO vo) throws Exception {
        GusetVO resultVO = gusetDAO.selectGuset(vo);
        if (resultVO == null)
            throw processException("info.nodata.msg");
        return resultVO;
    }

    /**
	 * guset 목록을 조회한다.
	 * @param searchVO - 조회할 정보가 담긴 VO
	 * @return guset 목록
	 * @exception Exception
	 */
    public List<?> selectGusetList(GusetDefaultVO searchVO) throws Exception {
        return gusetDAO.selectGusetList(searchVO);
    }

    /**
	 * guset 총 갯수를 조회한다.
	 * @param searchVO - 조회할 정보가 담긴 VO
	 * @return guset 총 갯수
	 * @exception
	 */
    public int selectGusetListTotCnt(GusetDefaultVO searchVO) {
		return gusetDAO.selectGusetListTotCnt(searchVO);
	}
    
}
